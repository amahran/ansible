- name: Pyenv - Install required dependencies
  become: true
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev
    - llvm
    - libncurses5-dev
    - libncursesw5-dev
    - xz-utils
    - tk-dev
    - libffi-dev
    - liblzma-dev
    - python3-openssl
  tags:
    - pyenv

- name: Pyenv - Clone repository
  become: true
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "{{ ansible_env.HOME }}/.pyenv"
    version: master
  become_user: "{{ ansible_env.USER }}"
  tags:
    - pyenv

- name: Pyenv - Add to the shell profile for Bash
  become: true
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: |
      # Pyenv
      export PATH="$HOME/.pyenv/bin:$PATH"
      eval "$(pyenv init --path)"
  become_user: "{{ ansible_env.USER }}"
  tags:
    - pyenv

- name: Pyenv - Add to the shell profile for Zsh
  become: true
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zprofile"
    line: |
      # Pyenv
      export PATH="$HOME/.pyenv/bin:$PATH"
      eval "$(pyenv init --path)"
  become_user: "{{ ansible_env.USER }}"
  tags:
    - pyenv

- name: Pyenv - Initialize in the shell for Bash
  become: true
  shell: 
    source "{{ ahsible_env.HOME }}/.bashrc"
    eval "$(pyenv init --path)"
  become_user: "{{ ansible_env.USER }}"
  tags:
    - pyenv

- name: Pyenv - Initialize in the shell for Zsh
  become: true
  shell: |
    source "{{ ansible_env.HOME }}/.zprofile"
    eval "$(pyenv init --path)"
  become_user: "{{ ansible_env.USER }}"
  tags:
    - pyenv

- name: Pyenv - Install the latest Python 3.x version
  become: true
  become_user: "{{ ansible_env.USER }}"
  # command: "sh -c 'version=$(pyenv install --list | grep -E \"^  3\\.[0-9]+\\.[0-9]+$\" | tail -n 1) && if ! pyenv versions --bare | grep -q $version; then pyenv install $version; fi'"
  shell: |
    version=$(pyenv install --list | grep -E "^  3\.[0-9]+\.[0-9]+$" | tail -n 1)
    if ! pyenv versions --bare | grep -q $version; then
      pyenv install $version
    fi
  tags:
    - pyenv

- name: Pyenv - Set global Python version to the latest installed
  become: true
  shell: pyenv global $(pyenv versions --bare | grep -E '3\.[0-9]+\.[0-9]+$' | tail -n 1)
  become_user: "{{ ansible_env.USER }}"
  tags:
    - pyenv
